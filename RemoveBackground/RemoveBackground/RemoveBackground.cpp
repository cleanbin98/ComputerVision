#include "opencv2/core.hpp"
#include "opencv2/imgcodecs.hpp"
#include "opencv2/stitching.hpp"
#include "opencv2/imgproc.hpp"
#include "opencv2/highgui.hpp"
#include <opencv2/video/background_segm.hpp>
#include <vector>
#include <iostream>
#include <filesystem>

using namespace cv;
using namespace std;

//global variables
Mat frame; //current frame
Mat fgMaskMOG2; //fg mask fg mask generated by MOG2 method
Ptr<BackgroundSubtractor> pMOG2;
int keyboard;

int main()
{
	namedWindow("Frame");
	namedWindow("FG Mask MOG 2");

	pMOG2 = createBackgroundSubtractorMOG2();

	VideoCapture capture("C:/ImageSamle/walking.mp4");
	while ((char)keyboard != 'q' && (char)keyboard != 27) {

		if (!capture.read(frame)) {
			cerr << "Unable to read next frame." << endl;
			cerr << "Exiting..." << endl;
			exit(EXIT_FAILURE);
		}

		pMOG2->apply(frame, fgMaskMOG2);

		stringstream ss;
		rectangle(frame, cv::Point(10, 2), cv::Point(100, 20),
			cv::Scalar(255, 255, 255), -1);
		ss << capture.get(CAP_PROP_POS_FRAMES);
		string frameNumberString = ss.str();
		putText(frame, frameNumberString.c_str(), cv::Point(15, 15),
			FONT_HERSHEY_SIMPLEX, 0.5, cv::Scalar(0, 0, 0));

		imshow("Frame", frame);
		imshow("FG Mask MOG 2", fgMaskMOG2);

		keyboard = waitKey(30);
	}

	capture.release();

	waitKey(0);
	return 0;
}
